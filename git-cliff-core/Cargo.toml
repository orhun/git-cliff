[package]
name = "git-cliff-core"
version = "2.4.0" # managed by release.sh
description = "Core library of git-cliff"
authors = ["git-cliff contributors <git-cliff@protonmail.com>"]
license = "MIT OR Apache-2.0"
readme = "../README.md"
homepage = "https://github.com/orhun/git-cliff"
repository = "https://github.com/orhun/git-cliff"
keywords = ["changelog", "generator", "conventional", "commit"]
edition = "2021"
rust-version = "1.73.0"

[features]
default = ["repo"]
## Enable parsing commits from a git repository.
## You can turn this off if you already have the commits to put in the
## changelog and you don't need `git-cliff` to parse them.
repo = ["dep:git2", "dep:glob", "dep:indexmap"]
# Enable integration with remote repositories.
remote = [
  "dep:reqwest",
  "dep:http-cache-reqwest",
  "dep:reqwest-middleware",
  "dep:tokio",
  "dep:futures",
]
## Enable integration with GitHub.
## You can turn this off if you don't use GitHub and don't want
## to make network requests to the GitHub API.
github = ["remote"]
## Enable integration with GitLab.
## You can turn this off if you don't use GitLab and don't want
## to make network requests to the GitLab API.
gitlab = ["remote"]
## Enable integration with Bitbucket.
## You can turn this off if you don't use Bitbucket and don't want
## to make network requests to the Bitbucket API.
bitbucket = ["remote"]
## Enable integration with Gitea.
## You can turn this off if you don't use Gitea and don't want
## to make network requests to the Gitea API.
gitea = ["remote"]

[dependencies]
glob = { workspace = true, optional = true }
regex.workspace = true
log.workspace = true
secrecy.workspace = true
dirs.workspace = true
lazy_static.workspace = true
thiserror = "1.0.61"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.118"
serde_regex = "1.1.0"
tera = "1.20.0"
indexmap = { version = "2.2.6", optional = true }
toml = "0.8.14"
lazy-regex = "3.1.0"
next_version = "0.2.18"
semver = "1.0.23"
document-features = { version = "0.2.8", optional = true }
reqwest = { version = "0.12.5", default-features = false, features = [
  "rustls-tls",
  "json",
  "zstd",
], optional = true }
http-cache-reqwest = { version = "0.14.0", optional = true }
reqwest-middleware = { version = "0.3.1", optional = true }
tokio = { version = "1.38.0", features = [
  "rt-multi-thread",
  "macros",
], optional = true }
futures = { version = "0.3.30", optional = true }
url = "2.5.2"
dyn-clone = "1.0.17"

[dependencies.git2]
version = "0.19.0"
default-features = false
optional = true

[dependencies.config]
version = "0.14.0"
default-features = false
features = ["toml", "yaml"]

[dependencies.git-conventional]
version = "0.12.6"
features = ["serde"]

[dependencies.rust-embed]
version = "8.4.0"
features = ["debug-embed", "compression"]

[dev-dependencies]
pretty_assertions = "1.4.0"
expect-test = "1.5.0"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
